
/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package com.oracle.xmlns.sonyquoteservice;

import java.math.BigDecimal;
import java.math.MathContext;
import java.util.logging.Logger;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;

import entity.Producto;
import facade.PersistenceFacade;

/**
 * This class was generated by Apache CXF 2.7.18
 * 2017-05-02T22:16:34.285-05:00
 * Generated source version: 2.7.18
 * 
 */

@javax.jws.WebService(
                      serviceName = "SonyCotizacion",
                      portName = "SonyOrderService",
                      targetNamespace = "http://xmlns.oracle.com/SonyQuoteService",
                      wsdlLocation = "file:/C:/WorkSpaceKall/SonyCotizacion/WebContent/SonyCotizacion.wsdl",
                      endpointInterface = "com.oracle.xmlns.sonyquoteservice.SonyQuoteService")

public class SonyQuoteServiceImpl implements SonyQuoteService {

	private static final Logger LOG = Logger.getLogger(SonyQuoteServiceImpl.class.getName());

	/* (non-Javadoc)
	 * @see com.oracle.xmlns.sonyquoteservice.SonyQuoteService#initiate(com.oracle.xmlns.sonyquoteservice.SonyQuoteServiceProcessRequest  payload )*
	 */
	public com.oracle.xmlns.sonyquoteservice.SonyQuoteServiceProcessResponse initiate(SonyQuoteServiceProcessRequest payload) { 
		LOG.info("Executing operation initiate");
		System.out.println(payload);
		try {
			com.oracle.xmlns.sonyquoteservice.SonyQuoteServiceProcessResponse _return = new com.oracle.xmlns.sonyquoteservice.SonyQuoteServiceProcessResponse();
			BigDecimal supplierPrice = BigDecimal.ZERO;
			int cantidadDisponible = 0;
			if( payload != null && payload.items!=null ){
				PersistenceFacade facade = new PersistenceFacade();
				for( Item i: payload.items ){
					Producto producto = facade.consultarProductoXCodigo(i.getItemId());
					if( producto != null ){
							supplierPrice = supplierPrice.add(producto.getValor().multiply(new BigDecimal(i.quantity), MathContext.DECIMAL32));
							cantidadDisponible = producto.getCantidad();
					}
				}
			}
			com.oracle.xmlns.sonyquoteservice.Quote _returnResult = new com.oracle.xmlns.sonyquoteservice.Quote();
			_returnResult.setSupplierPrice(supplierPrice.toString());
			_returnResult.setQuantityAvailable(cantidadDisponible);
			_return.setResult(_returnResult);
			return _return;
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
	}

}
